public class Person 
{
  private String firstName;
  private String lastName;
  
  public Person(String firstName, String lastName)
  {
    this.firstName=firstName;
    this.lastName=lastName;
  }
  
  public int throwDisc(int pow)
  {
    
    if(pow<=1)
    {
      pow=1;
    }
    
    else if(pow>=10)
    {
      pow=10;
    }
    
    
    return (pow*2);
  }
  
  public String toString()
  {
    return(lastName+", "+firstName);
  }
  
  //extras
  public String getfirstName()
  {
    return firstName;
  }
  
  public String getlastName()
  {
    return lastName;
  }
  
}


public class Coach extends Person
{
  private String role;
  
  public Coach(String firstName, String lastName, String role)
  {
    super(firstName, lastName);
    
    this.role=role;
    
  }
  
  public String toString()
  {
    super.toString();
    return(super.toString()+"\n   Role: "+role);
  }
  
  //extras
  public String getrole()
  {
    return role;
  }
  
}


import java.util.ArrayList;

public class UltimateTeam 
{
  private ArrayList<UltimatePlayer> players;
  private ArrayList<Coach> coaches;
  
  public UltimateTeam(ArrayList<UltimatePlayer> players, ArrayList<Coach> coaches)
  {
    this.players=players;
    this.coaches=coaches;
  }
  
  public String getCutters()
  {
    String y = "";
    for(UltimatePlayer x: players)
    {
      if((x.getPosition()).equals("cutter"))
      {
        y=y+x.toString()+"\n";
      }
    }
    return y;
  }
  
  public String getHandlers()
  {
    String b = "";
    for(UltimatePlayer x: players)
    {
      if((x.getPosition()).equals("handler"))
      {
        b=b+x.toString()+"\n";
      }
    }
    return b;
  }
  
  public String toString()
  {
    String c = "COACHES\n";
    for(Coach d : coaches)
    {
      c=c+d.toString();
      c=c+"\n";
    }
    
    c=c+"\n";
    c=c+"PLAYERS\n";
    for(UltimatePlayer e : players)
    {
      c=c+e.toString();
      c=c+"\n";
    }
    
    return c;
  }
}


public class Captain extends UltimatePlayer
{
  private boolean type;
  
  public Captain(String firstName, String lastName, String position, boolean type)
  {
    super(firstName, lastName, position);
    settype(type);
  }
  
  public int throwDisc(int pow)
  {
    return(super.throwDisc(pow)*5/4);
  }
  
  public String toString()
  {
    String m;
    if(type==true)
    {
      m="offense";
    }
    else
    {
      m="defense";
    }
    
    return(super.toString()+"\n   Captain: "+m);
  }
  
  public void settype(boolean type)
  {
    this.type=type;
  }
}


public class UltimatePlayer extends Person
{
  private int jerseyNumber;
  private static int jerseyNumbercount=1; //saves all increment changes
  //jerseyNumbercount=1;
  private String position;
  
  
  public UltimatePlayer(String firstName, String lastName, String position)
  {
    super(firstName, lastName);
    
    if(!(position.equals("handler")) && !(position.equals("cutter")))
    {
      this.position="handler";
    }
    else
    {
      this.position=position;
    }
    //jerseyNumber++;
    jerseyNumber=jerseyNumbercount;
    jerseyNumbercount++;
    
  }
  
  public String getPosition()
  {
    return position;
  }
  
  public int throwDisc(int pow)
  {
    
    return((super.throwDisc(pow))*2);
    
  }
  
  public String toString()
  {
    return(super.toString()+"\n   Jersey #: "+jerseyNumber+"\n   Position: "+position);
  }
  
  //extras
  
  
  public int getjerseyNumber()
  {
    return jerseyNumber;
  }
  
  public void setposition(String position)
  {
    this.position=position;
  }
  
}


import java.util.ArrayList;
import java.util.Scanner;

public class runner_Ultimate{

  public static void main(String[] args){
    ArrayList<UltimatePlayer> players = new ArrayList<UltimatePlayer>();
    ArrayList<Coach> coaches = new ArrayList<Coach>();
    Scanner scan = new Scanner(System.in);
    String ins = "";
    while(!ins.equals("q")){
      System.out.println("\nWhat do you want to do?\np - make a person\nt - make a team from the current player/coach lists\nq - quit");
      ins = scan.nextLine().toLowerCase();
      if(ins.equals("p")){
        Person p;
        System.out.println("\nWhich class do you want to use?\np - Person\nu - UltimatePlayer\nc - Captain\no - Coach");
        String cls = scan.nextLine().toLowerCase();
        System.out.println("First name?");
        String fn = scan.nextLine();
        System.out.println("Last name?");
        String ln = scan.nextLine();
        if(cls.equals("u")||cls.equals("c")){
          System.out.println("Position?");
          String ps = scan.nextLine();
          if(cls.equals("c")){
            System.out.println("Offensive coach? (t/f)");
            boolean tp = scan.nextLine().toLowerCase().equals("t");
            p = new Captain(fn, ln, ps, tp);
          }
          else
            p = new UltimatePlayer(fn, ln, ps);
          players.add((UltimatePlayer)p);
          System.out.println("\n" + fn + " " + ln + " was added to the players list.");
        }
        else if(cls.equals("o")){
          System.out.println("Role?");
          String rl = scan.nextLine();
          p = new Coach(fn, ln, rl);
          coaches.add((Coach)p);
          System.out.println("\n" + fn + " " + ln + " was added to the coaches list.");
        }
        else{
          p = new Person(fn, ln);
          System.out.println("\nSorry, only UltimatePlayers, Captains and Coaches can be added to the team.");
        }
        System.out.println("\n" + p);
        System.out.println("\nType \"t\" for " + fn + " to throw a disc.");
        if(scan.nextLine().toLowerCase().equals("t")){
          System.out.println("Enter power level between 1 and 10.");
          System.out.println(fn + " threw the disc " + p.throwDisc(scan.nextInt()) + " yards.");
          scan.nextLine();
        }
      }
      else if(ins.equals("t")){
        UltimateTeam t = new UltimateTeam(players, coaches);
        System.out.println("\nYour team is ready!\n");
        while(!ins.equals("q")){
          System.out.println("\nWhat do you want to do?\nc - see the cutters\nh - see handlers\nt = see the whole team\nq - quit");
          ins = scan.nextLine().toLowerCase();
          if(ins.equals("h"))
            System.out.println("\n" + t.getHandlers());
          else if(ins.equals("c"))
            System.out.println("\n" + t.getCutters());
          else if(ins.equals("t"))
            System.out.println("\n" + t + "\n");
        }
      }
    }
  }
}


